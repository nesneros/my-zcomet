#!/bin/zsh -e

usage() {
    echo "Usage: $0 [-l line] [-v] [-w] [file-or-directory]"
    if [[ -n "$1" ]]; then
        echo "$1"
        exit 1
    fi
}

debug_log() {
    if [[ -n "$DEBUG" ]]; then
        echo "$@"
    fi
}

while getopts "vwl:" opt; do
    case $opt in
    l) line="$OPTARG" ;;
    w) WAIT="-w" ;;
    v) DEBUG=1 ;;
    *)
        usage
        exit 1
        ;;
    esac
done
shift $((OPTIND - 1))

file_or_dir="${1-.}"

dir="$file_or_dir"
while [[ ! -d "$dir" ]]; do
    dir=$(dirname "$dir")
    # Stop if we reach the root directory
    if [ "$dir" = "/" ]; then
        echo "No existing directory found in path hierarchy"
        return 1
    fi
done

debug_log "file or dir: $file_or_dir, dir: $dir"
if [[ -f $file_or_dir ]] || [[ ! -e "$file_or_dir" ]]; then
    debug_log "'$file_or_dir' is an existing regular file or a new file"
    goto_param="$file_or_dir"
    if [[ -n "$line" ]]; then
        goto_param="$goto_param:$line"
    fi
    goto_param="--goto '$goto_param'"
    debug_log "goto_param: $goto_param"
fi

z-add "$dir"

if project_root=$(git -C $dir rev-parse --show-toplevel 2>/dev/null); then
    arg=$project_root
    debug_log "git project root: $project_root, arg: $arg"
    z-add "$project_root"
else
    arg="$file_or_dir"
    if [[ -f "$file_or_dir" ]]; then
        new_window_arg="--new-window"
    fi
    debug_log "not a git project. arg: $arg"
fi

cmd="code $WAIT $new_window_arg $goto_param '$arg'"
debug_log "cmd: $cmd"
exec eval "$cmd"
# code "$WAIT" "$new_window_arg" "$goto_param" "$arg" # >/tmp/editor-log 2>&1
